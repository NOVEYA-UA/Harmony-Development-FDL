import math
import numpy as np
import matplotlib.pyplot as plt

# === –ú–û–î–ï–õ–¨: –†–µ–∑–æ–Ω–∞–Ω—Å–Ω–∞—è —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏—è –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ ===

# === –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ===
MAX_DEPTH = 150  # –∫–º

def transmutation_probability(d, P, T, EM, E, f, phi):
    """–†–∞—Å—á—ë—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏"""
    term1 = math.sin((2 * math.pi * d) / MAX_DEPTH)
    term2 = P * T * EM
    term3 = E * math.sin(2 * math.pi * f + phi)
    return term1 * term2 * term3

def hydrocarbon_accumulation(probability, d):
    """–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —É–≥–ª–µ–≤–æ–¥–æ—Ä–æ–¥–æ–≤"""
    return probability * math.exp(-d / 50)

def transmutation_energy(P, T, EM):
    """–≠–Ω–µ—Ä–≥–∏—è —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è –¥–∞–≤–ª–µ–Ω–∏—è, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –ø–æ–ª—è"""
    return P * T * math.log(EM)

# === –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ===
example_depths = np.linspace(10, 150, 50)  # 50 —Ç–æ—á–µ–∫
probabilities = []
accumulations = []
energies = []

for d in example_depths:
    P = 50 + (d / 3)         # –¥–∞–≤–ª–µ–Ω–∏–µ
    T = 1000 + d * 4         # —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    EM = 3 + (d / 100)       # –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—è
    E = 10                   # —ç–Ω–µ—Ä–≥–∏—è –æ—Å—Ü–∏–ª–ª—è—Ç–æ—Ä–∞
    f = 5                    # —á–∞—Å—Ç–æ—Ç–∞
    phi = math.pi / 4        # —Ñ–∞–∑–æ–≤—ã–π —Å–¥–≤–∏–≥

    prob = transmutation_probability(d, P, T, EM, E, f, phi)
    acc = hydrocarbon_accumulation(prob, d)
    energy = transmutation_energy(P, T, EM)

    probabilities.append(prob)
    accumulations.append(acc)
    energies.append(energy)

# === –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
plt.figure(figsize=(12, 6))

plt.subplot(1, 3, 1)
plt.plot(example_depths, probabilities, label='Transmutation Probability', color='purple')
plt.xlabel('–ì–ª—É–±–∏–Ω–∞ (–∫–º)')
plt.ylabel('–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å')
plt.title('–†–µ–∑–æ–Ω–∞–Ω—Å–Ω–∞—è —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏—è')
plt.grid(True)

plt.subplot(1, 3, 2)
plt.plot(example_depths, accumulations, label='Hydrocarbon Accumulation', color='green')
plt.xlabel('–ì–ª—É–±–∏–Ω–∞ (–∫–º)')
plt.ylabel('–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è')
plt.title('–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ–≤–æ–¥–æ—Ä–æ–¥–æ–≤')
plt.grid(True)

plt.subplot(1, 3, 3)
plt.plot(example_depths, energies, label='Transmutation Energy', color='orange')
plt.xlabel('–ì–ª—É–±–∏–Ω–∞ (–∫–º)')
plt.ylabel('–≠–Ω–µ—Ä–≥–∏—è')
plt.title('–≠–Ω–µ—Ä–≥–∏—è —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏')
plt.grid(True)

plt.tight_layout()
plt.show()

# === –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏ ===
def show_example_point(d=100):
    P = 50 + (d / 3)
    T = 1000 + d * 4
    EM = 3 + (d / 100)
    E = 10
    f = 5
    phi = math.pi / 4

    prob = transmutation_probability(d, P, T, EM, E, f, phi)
    acc = hydrocarbon_accumulation(prob, d)
    energy = transmutation_energy(P, T, EM)

    print("\nüåç –ü—Ä–∏–º–µ—Ä –¥–ª—è –≥–ª—É–±–∏–Ω—ã:", d, "–∫–º")
    print("  –î–∞–≤–ª–µ–Ω–∏–µ:", round(P, 2))
    print("  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:", round(T, 2), "K")
    print("  –ù–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—è:", round(EM, 2))
    print("  ‚Ü≥ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏:", round(prob, 3))
    print("  ‚Ü≥ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ–≤–æ–¥–æ—Ä–æ–¥–æ–≤:", round(acc, 3))
    print("  ‚Ü≥ –≠–Ω–µ—Ä–≥–∏—è —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏:", round(energy, 1))

if __name__ == "__main__":
    show_example_point(100)
